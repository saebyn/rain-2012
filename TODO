
Intended next steps:

* Director event system

* Dialog class

* NPC Dialog

* Game pause screen & menu


App Initialization
------------------

Check for canvas, et al, support via modernizr and report status

Check for optional features (local storage, sound) and tell the app about them


Items & Inventory
-----------------

* Items

  - Subclass of Entity

  - Can be converted into inventory item

  - Can be picked up by clicking on them.

* Player inventory

  - Inventory items can be held by Character in inventory

  - Inventory overlay in HTML&CSS

  - Shows items held by player

* Wieldable items.


Dev Tools
---------

World editor mode


Graphics
--------

* Animated sprites

  - Create a animated surface subclass that will automatically play default or specified animation, loaded by Loader


Sound
-----

* Music tracks spec'ed at game start

* Sounds spec'ed at game start

* Music tracks named per level


AI
--

Moving NPCs

  * Switch from one behavior to another based on world conditions/input

    - Example: game notifies characters when the player is close to them / the npc is on screen.

  * A waypoint behavior will follow a path set by a series of points, and optionally
    return to the original point and cycle through the path indefintely.

    - NPCs may go at a slower or faster pace during each leg of the path,
      and wait a set amount of time at each waypoint.

    - Initiallly use very specific paths, so no pathfinding code is needed.

  * NPCs use pathfinding code to move


Level files
-----------

* Level files and/or spritesheet files support key frame animations


Misc
----

* Add In-game Menu (Esc key)

  - Add 'Save and quit' option

  - Add 'Save game' option

  - Add 'Quit' option [back to start screen]

  - Add 'Back to game' option [close menu]


* Director event system

  - Director objects provide an event bind/trigger system

  - Director objects emit gamejs events, update and draw events to subscribed
    (bound) callables

  - Scene objects (and others) can bind their methods to Director events

  - Bound callables are called in most-recent order

  - Event callbacks can cancel the event by returning false (and only false,
    not undefined, etc)

    - This allows for modal dialogs, etc.

  - External code can trigger or bind to Director object events


* Game startup menu screen

  - Show options:
  
    - new game (and name game)
    
    - save game (if have local storage support)
    
    - load game (if any saved and have local storage support)


* Game save & load

  - Save current level & position

  - Save player inventory

  - Save npc positions & states

  - Load last saved game, trigger level load, set position

  - Load player inventory

  - Name the save

  - Choose a saved game to restore

* Laptop computer gives openable overlay (HTML&CSS)

* Smartphone gives sidebar overlay (HTML&CSS)
